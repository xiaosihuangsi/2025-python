{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Python Lab \u00b7 Learn by Building","text":"<p>Welcome to Python Lab</p> <p>A structured collection of Python projects designed to develop core programming skills through practical implementation.</p>"},{"location":"#project-list","title":"\ud83d\udcda Project List","text":"# Project Name Description 1 Word Counter A script to count the number of words in a text file using command-line arguments. 2 Simple Calculator A basic calculator that performs addition, subtraction, multiplication, and division. 3 String Toolkit Basic text processing utilities, including string analysis and slicing. 4 List Organizer Allows dynamic list operations like appending, slicing, and copying based on user input. 5 Number Classifier Classifies an integer input as negative, zero, single (1), or more. 6 For Loop Practice Demonstrates looping through lists and dictionaries with filtering examples. 7 Range Practice Generate and explore number sequences using Python's <code>range()</code> function. 8 Break &amp; Continue Practice Demo of <code>break</code> to exit loops early and <code>continue</code> to skip iterations. 9 Loop-Else Prime Checker Demonstrates the use of <code>else</code> with loops to identify prime numbers. 10 Pass Statement Demo Demonstrates Python's <code>pass</code> statement as a placeholder in loops, classes, and functions. 11 Match Statement Demo Demonstrates Python 3.10+ structural pattern matching."},{"location":"#about-the-author","title":"About the Author","text":"<p>Created and maintained by Xiaosi Huang, an enthusiastic Python learner and builder who believes that the best way to learn is to make things.</p> <p>\ud83d\udc49 You can explore more of their work at: \ud83d\udd17 github.com/xiaosihuangsi</p>"},{"location":"projects/break_continue/","title":"Break &amp; Continue Practice","text":"<p>Illustrates how <code>break</code> exits a loop and <code>continue</code> skips to the next iteration.</p>"},{"location":"projects/break_continue/#example","title":"Example","text":""},{"location":"projects/calculator/","title":"Calculator Tool","text":"<p>The Calculator Tool performs basic arithmetic operations: addition, subtraction, multiplication, and division.</p>"},{"location":"projects/calculator/#how-to-use","title":"How to Use","text":"<p>Choose an operation and input two numbers.</p>"},{"location":"projects/calculator/#example","title":"Example","text":""},{"location":"projects/for_loop/","title":"For Loop Practice","text":"<p>Demonstrates list and dictionary iteration with <code>for</code> loops.</p>"},{"location":"projects/for_loop/#example","title":"Example","text":""},{"location":"projects/list_organizer/","title":"List Organizer Tool","text":"<p>Helps you interact with Python lists\u2014adding elements, slicing, and copying.</p>"},{"location":"projects/list_organizer/#example","title":"Example","text":""},{"location":"projects/loop_else/","title":"Loop-Else Prime Checker","text":"<p>Demonstrates using <code>else</code> in a loop to detect prime numbers.</p>"},{"location":"projects/loop_else/#example","title":"Example","text":""},{"location":"projects/match/","title":"Match Statement","text":""},{"location":"projects/match/#matchmd","title":"\ud83d\udcc4 <code>match.md</code>","text":"<p>```markdown</p>"},{"location":"projects/match/#match-statement-practice","title":"Match Statement Practice","text":"<p>Demonstrates Python's <code>match-case</code> statement to pattern match values and object structures.</p>"},{"location":"projects/match/#example","title":"Example","text":"<p>```python match value:     case 1:         print(\"One\")     case _:         print(\"Default\")</p>"},{"location":"projects/number_classifier/","title":"Number Classifier Tool","text":"<p>Classifies an integer as negative, zero, one, or more.</p>"},{"location":"projects/number_classifier/#example","title":"Example","text":""},{"location":"projects/pass_statement/","title":"Pass Statement Demo","text":"<p>Shows three uses of the <code>pass</code> statement: in loops, placeholder functions, and empty classes.</p>"},{"location":"projects/pass_statement/#example","title":"Example","text":"<p>```python while True:     pass  # Press Ctrl+C to stop</p>"},{"location":"projects/range/","title":"Range Practice","text":"<p>Demonstrates Python's <code>range()</code> for generating sequences and iterating.</p>"},{"location":"projects/range/#example","title":"Example","text":""},{"location":"projects/string_toolkit/","title":"String Toolkit","text":"<p>Analyzes strings, repeats them, extracts substrings, counts vowels, and identifies special characters.</p>"},{"location":"projects/string_toolkit/#example","title":"Example","text":""},{"location":"projects/word_counter/","title":"Word Counter Tool","text":"<p>The Word Counter Tool reads a text file or input string and counts the number of words it contains. This is useful for quick analysis, content validation, or basic natural language processing.</p>"},{"location":"projects/word_counter/#how-to-use","title":"How to Use","text":"<p>You can run the tool by executing the Python script directly, or by selecting it from the tool hub interface.</p> <p>It accepts either: - a text input via the terminal - or a <code>.txt</code> file path as an argument</p> <p>The tool will then return the total word count.</p>"},{"location":"projects/word_counter/#example","title":"Example","text":"<p>Enter text or file path: Hello world, this is a test. Word count: 6</p>"},{"location":"projects/word_counter/#file-location","title":"File Location","text":"<p>Path: word_counter_tool/word_counter.py</p>"}]}